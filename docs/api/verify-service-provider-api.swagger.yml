openapi: 3.0.0
info:
  description: This is a description of the API for the Verify Service Provider.
  version: 2.0.0
  title: Verify Service Provider
paths:
  /generate-request:
    post:
      summary: Generate a SAML Authentication Request
      description:  Generate a SAML Authentication Request (AuthnRequest).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGenerationBody'
        required: true
      responses:
        '200':
          description: >-
            Contains an object with a valid SAML Authentication request that can
            be consumed by the Verify service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponseBody'
        '422':
          description: >-
            An error due to a JSON request in an invalid format (e.g. missing
            mandatory parameters).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                code: 422
                message: Some error message
        '500':
          description: An error due to an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                code: 500
                message: Some error message
  /translate-response:
    post:
      summary: Translate a SAML Response
      description: >-
        Translate a SAML Response received from the GOV.UK Verify Hub into JSON.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateSamlResponseBody'
        description: An object containing the SAML response returned by the Verify service.
        required: true
      responses:
        '200':
          description: 'Contains the details of the SAML response, translated into JSON.'
          content:
            application/json:
              schema:
               oneOf:
                  - $ref: '#/components/schemas/IdentityVerificationScenario'
                  - $ref: '#/components/schemas/AuthenticationFailedScenario'
                  - $ref: '#/components/schemas/NoAuthenticationScenario'
                  - $ref: '#/components/schemas/RequestErrorScenario'
        '400':
          description: An error due to a problem with translating the Response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                code: 400
                message: Some error message
        '422':
          description: >-
            An error due to a JSON request in an invalid format (e.g. missing
            mandatory parameters).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                code: 422
                message: Some error message
        '500':
          description: An error due to an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                code: 500
                message: Some error message
components:
  schemas:
    RequestGenerationBody:
      type: object
      properties:
        entityId:
          $ref: '#/components/schemas/EntityId'
    RequestResponseBody:
      type: object
      required:
        - samlRequest
        - requestId
        - ssoLocation
      properties:
        samlRequest:
          description: SAML Authn Request as a base64 string.
          type: string
          format: byte
        requestId:
          description: >-
            A token that identifies the Authn Request. This is used later to
            verify that the Authn Request and SAML Response have passed through
            the same browser.
          type: string
          format: byte
        ssoLocation:
          description: >-
            The url for Verify Hub SSO. The entrypoint for SAML authentication
            flow.
          type: string
          format: url
    TranslateSamlResponseBody:
      type: object
      required:
        - samlResponse
        - requestId
        - levelOfAssurance
      properties:
        samlResponse:
          description: A SAML Response as a base64 encoded string.
          type: string
          format: byte
        requestId:
          description: >-
            A token that was generated for the original SAML Authn Request. This
            is used to verify that the Authn Request and SAML Response have
            passed  through the same browser.
          type: string
          format: byte
        levelOfAssurance:
          $ref: '#/components/schemas/RequiredLevelOfAssurance'
    RequestErrorScenario:
      description: Returned when there was an error in the request.
      type: object
      required:
        - scenario
      properties:
        scenario:
          type: string
          enum:
            - REQUEST_ERROR
          description: Returned when there was an error in the request.
    AuthenticationFailedScenario:
      description: Returned when there was a failure to authenticate.
      type: object
      required:
        - scenario
      properties:
        scenario:
          type: string
          enum:
            - AUTHENTICATION_FAILED
          description: Returned when there was a failure to authenticate.
    NoAuthenticationScenario:
      description: Returned when there wasn't an authentication
      type: object
      required:
        - scenario
      properties:
        scenario:
          type: string
          enum:
            - NO_AUTHENTICATION
          description: Returned when there wasn't an authentication
    IdentityVerificationScenario:
      description: Returned when the user's identity was successfully verified
      type: object
      required:
        - scenario
        - pid
        - attributes
        - levelOfAssurance
      properties:
        scenario:
          type: string
          enum: 
          - IDENTITY_VERIFIED
          description: Returned when the user's identity was successfully verified
        pid:
          description: >-
            A unique identifier that can identify a user against an internal
            record.
          type: string
          format: byte
        levelOfAssurance:
          $ref: '#/components/schemas/ReceivedLevelOfAssurance'
        attributes:
          $ref: '#/components/schemas/Attributes'
    RequiredLevelOfAssurance:
      description: The minimum level of assurance required by the Relying Party Service.
      type: string
      enum:
        - LEVEL_1
        - LEVEL_2
        - LEVEL_3
        - LEVEL_4
    EntityId:
      description: >-
        The Entity Id for the service interacting with the Verify Service
        Provider. This is required if the Verify Service Provider is set up for
        multi-tenanted use, otherwise it is optional. The value, if provided,
        must be one of those listed in the configuration for the Verify Service
        Provider.
      type: string
    ReceivedLevelOfAssurance:
      description: Level of assurance the user was authenticated with.
      type: string
      enum:
        - LEVEL_1
        - LEVEL_2
        - LEVEL_3
        - LEVEL_4
    Attributes:
      description: >-
        An object containing the attributes returned from the IDP.
      type: object
      properties:
        firstNames:
          type: array
          items:
            $ref: '#/components/schemas/PersonalName'
        middleNames:
          type: array
          items:
            $ref: '#/components/schemas/PersonalName'
        surnames:
          type: array
          items:
            $ref: '#/components/schemas/PersonalName'
        datesOfBirth:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/VerifiableAttribute'
              - properties:
                  value:
                    $ref: '#/components/schemas/Date'
        gender:
          type: object
          properties:
            verified:
              type: boolean
            value:
              type: string
              enum:
                - FEMALE
                - MALE
                - NOT_SPECIFIED
                - OTHER
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/VerifiableAddress'
    Date:
      type: string
      format: date
    VerifiableAttribute:
      type: object
      properties:
        verified:
          type: boolean
        from:
          $ref: '#/components/schemas/Date'
        to:
          $ref: '#/components/schemas/Date'
    PersonalName:
      allOf:
      - $ref: '#/components/schemas/VerifiableAttribute'
      - description: 'An object describing a forename, middlename or surname'
        properties:
          value:
            type: string
          nonLatinScriptValue:
            type: string
    VerifiableAddress:
      allOf:
        - $ref: '#/components/schemas/VerifiableAttribute'
        - description: An object describing the address fields of a user
          properties:
            value:
              $ref: '#/components/schemas/Address'
    Address:
      type: object
      description: An object describing the address fields of a user
      properties:
        lines:
          type: array
          items:
            type: string
        postCode:
          type: string
        internationalPostCode:
          type: string
        uprn:
          type: string
    ErrorMessage:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
        message:
          type: string
